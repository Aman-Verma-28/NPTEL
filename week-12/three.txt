# import math
from collections import Counter, deque, defaultdict
from math import *
# from bisect import bisect_right
mod = 1000000007
# from functools import reduce
# from itertools import permutations
# import queue


def solve():
    n=int(input())
    l=list(map(int,input().split()))
    mi=l.index(min(l))
    mx=l.index(max(l))
    #CASE-1:
    ans1=max(mi,mx)+1
    #CASE-2:
    ans2=n-min(mi,mx)
    #CASE-3:
    ans3=min(mi,mx)+1+n-max(mi,mx)
    print(min(ans1,ans2,ans3))
    






t=int(input())
# t = 1
for _ in range(t):
    # print("Case #{}: ".format(_ + 1), end="")
    solve()